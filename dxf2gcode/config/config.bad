
#  Section and variable names must be valid Python identifiers
#      do not use whitespace in names

# do not edit the following section name:
[Version]
    
    # do not edit the following value:
    config_version = 6

[Paths]
    # 
    # look here for DXF files
    import_dir = /Users/florian/Documents/Zeichnungen
    
    # store gcode output here 
    output_dir = /Users/florian/Documents/Zeichnungen


[Depth_Coordinates]
    axis3_retract = 0.0
    axis3_slice_depth = 0.0
    axis3_safe_margin = 0.0
    axis3_start_mill_depth = 0.0
    axis3_mill_depth = 0.0

[Axis_letters]
    ax1_letter = X
    ax2_letter = Y
    ax3_letter = Z

[Plane_Coordinates]
    axis1_start_end = 0.0
    axis2_start_end = 0.0

[General]
    write_to_stdout = False
    live_update_export_route = False


[Route_Optimisation]
    default_TSP = False
    
    # Path optimizer behaviour:
    #  CONSTRAIN_ORDER_ONLY: fixed Shapes and optimized Shapes can be mixed. Only order of fixed shapes is kept
    #  CONSTRAIN_PLACE_AFTER: optimized Shapes are always placed after any fixed Shape
    TSP_shape_order = CONSTRAIN_ORDER_ONLY
    mutation_rate = 0.95
    max_population = 20
    max_iterations = 300
    begin_art = heurestic

[Import_Parameters]
    point_tolerance = 0.01
    spline_check = True
    fitting_tolerance = 0.01

[Tool_Parameters]
    [[1]]
        diameter = 2.0
        speed = 6000.0
        start_radius = 0.2
    
    [[2]]
        diameter = 2.0
        speed = 6000.0
        start_radius = 1.0
    
    [[10]]
        diameter = 10.0
        speed = 6000.0
        start_radius = 2.0

[Custom_Actions]
    [[custom_gcode]]
        gcode = '"""(change subsection name and insert your custom GCode here. Use triple quote to place the code on several lines)"""'


[Filters]
    pstoedit_cmd = /opt/local/bin/pstoedit
    pstoedit_opt = -f, dxf, -mm

[Logging]
    
    # set this to 'logfile = <filename>' to turn on file logging
    # or give the '-L logfile' program option
    logfile = ""
    
    # log levels are one in increasing importance:
    #      DEBUG INFO WARNING  ERROR CRITICAL
    # log events with importance >= loglevel are logged to the
    # corresponding output
    
    # this really goes to stderr
    console_loglevel = DEBUG
    
    file_loglevel = DEBUG
    
    # logging level for the message window
    window_loglevel = INFO

[Feed_Rates]
    f_g1_plane = 400.0
    f_g1_depth = 150.0
